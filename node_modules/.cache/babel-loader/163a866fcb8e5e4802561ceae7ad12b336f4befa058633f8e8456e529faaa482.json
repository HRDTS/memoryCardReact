{"ast":null,"code":"var _jsxFileName = \"/home/tunahan/Desktop/testFolder/hooks/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Cards from \"./cards\";\nimport _ from \"lodash\";\n\n// order display rerenderen bij game over OF Winner\n// styling toevoegen.\n// fin.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [gamePlayed, setGamePlayed] = useState(0);\n  const displayedOrders = [];\n  const StoreDisplayOrder = recursions => {\n    let newDisplayOrder = [];\n    if (displayedOrders.length === recursions) {\n      return displayedOrders;\n    }\n    while (newDisplayOrder.length < 12) {\n      let r = Number.parseInt(Math.random() * 12);\n      if (newDisplayOrder.indexOf(r) === -1) newDisplayOrder.push(r);\n    }\n    if (displayedOrders[0] === undefined) {\n      displayedOrders.push(newDisplayOrder);\n      return StoreDisplayOrder(recursions);\n    }\n    for (const i in displayedOrders) {\n      if (_.isEqual(displayedOrders[i], newDisplayOrder)) {\n        return StoreDisplayOrder(recursions);\n      }\n      displayedOrders.push(newDisplayOrder);\n      return StoreDisplayOrder(recursions);\n    }\n  };\n  useEffect(element => {\n    StoreDisplayOrder(12);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [gamePlayed, /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"This is a simple memory card game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      displayedOrders: displayedOrders,\n      gamePlayed: gamePlayed,\n      setGamePlayed: setGamePlayed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"92IicQLGTkfWsY1cW//+DLGD3sc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Cards","_","App","gamePlayed","setGamePlayed","displayedOrders","StoreDisplayOrder","recursions","newDisplayOrder","length","r","Number","parseInt","Math","random","indexOf","push","undefined","i","isEqual","element"],"sources":["/home/tunahan/Desktop/testFolder/hooks/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Cards from \"./cards\";\nimport _ from \"lodash\";\n\n// order display rerenderen bij game over OF Winner\n// styling toevoegen.\n// fin.\n\nconst App = () => {\n\n  const [gamePlayed, setGamePlayed] = useState(0)\n\n  const displayedOrders = []\n\n  const StoreDisplayOrder = (recursions) => { \n    let newDisplayOrder = []\n    if(displayedOrders.length === recursions){return displayedOrders}\n\n    while(newDisplayOrder.length < 12) {\n      let r = Number.parseInt(Math.random() * 12)\n      if(newDisplayOrder.indexOf(r) === -1) newDisplayOrder.push(r)\n    }\n\n    if(displayedOrders[0] === undefined) {\n      displayedOrders.push(newDisplayOrder)\n      return StoreDisplayOrder(recursions)\n    }\n    for(const i in displayedOrders) {\n      if( _.isEqual(displayedOrders[i], newDisplayOrder)) {\n        return StoreDisplayOrder(recursions)\n      } \n      displayedOrders.push(newDisplayOrder)\n      return StoreDisplayOrder(recursions) \n      \n    }\n  }\n\n  useEffect((element) => {\n    StoreDisplayOrder(12)\n  }, [])\n\n  \n\n  return (\n    <div>\n      {gamePlayed}\n      <h1>React project</h1>\n      <div>This is a simple memory card game</div>\n      <Cards displayedOrders={displayedOrders} gamePlayed={gamePlayed} setGamePlayed={setGamePlayed}/>\n    </div>\n  )\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,CAAC,MAAM,QAAQ;;AAEtB;AACA;AACA;AAAA;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;EAEhB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAMO,eAAe,GAAG,EAAE;EAE1B,MAAMC,iBAAiB,GAAIC,UAAU,IAAK;IACxC,IAAIC,eAAe,GAAG,EAAE;IACxB,IAAGH,eAAe,CAACI,MAAM,KAAKF,UAAU,EAAC;MAAC,OAAOF,eAAe;IAAA;IAEhE,OAAMG,eAAe,CAACC,MAAM,GAAG,EAAE,EAAE;MACjC,IAAIC,CAAC,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,MAAM,EAAE,GAAG,EAAE,CAAC;MAC3C,IAAGN,eAAe,CAACO,OAAO,CAACL,CAAC,CAAC,KAAK,CAAC,CAAC,EAAEF,eAAe,CAACQ,IAAI,CAACN,CAAC,CAAC;IAC/D;IAEA,IAAGL,eAAe,CAAC,CAAC,CAAC,KAAKY,SAAS,EAAE;MACnCZ,eAAe,CAACW,IAAI,CAACR,eAAe,CAAC;MACrC,OAAOF,iBAAiB,CAACC,UAAU,CAAC;IACtC;IACA,KAAI,MAAMW,CAAC,IAAIb,eAAe,EAAE;MAC9B,IAAIJ,CAAC,CAACkB,OAAO,CAACd,eAAe,CAACa,CAAC,CAAC,EAAEV,eAAe,CAAC,EAAE;QAClD,OAAOF,iBAAiB,CAACC,UAAU,CAAC;MACtC;MACAF,eAAe,CAACW,IAAI,CAACR,eAAe,CAAC;MACrC,OAAOF,iBAAiB,CAACC,UAAU,CAAC;IAEtC;EACF,CAAC;EAEDR,SAAS,CAAEqB,OAAO,IAAK;IACrBd,iBAAiB,CAAC,EAAE,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAIN,oBACE;IAAA,WACGH,UAAU,eACX;MAAA,UAAI;IAAa;MAAA;MAAA;MAAA;IAAA,QAAK,eACtB;MAAA,UAAK;IAAiC;MAAA;MAAA;MAAA;IAAA,QAAM,eAC5C,QAAC,KAAK;MAAC,eAAe,EAAEE,eAAgB;MAAC,UAAU,EAAEF,UAAW;MAAC,aAAa,EAAEC;IAAc;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAC5F;AAEV,CAAC;AAAC,GA3CIF,GAAG;AAAA,KAAHA,GAAG;AA6CT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}