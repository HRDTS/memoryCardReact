{"ast":null,"code":"var _jsxFileName = \"/home/tunahan/Desktop/testFolder/hooks/src/cards.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { uniqueId } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = props => {\n  _s();\n  const displayedOrders = props.displayedOrders;\n  const game = props.game;\n  const [count, setCount] = useState(0);\n  const [bestCount, setBestCount] = useState([0]);\n  const [clickSequence, setClickSequence] = useState([]);\n  const saveNumber = divContent => {\n    if (count === 11) {\n      alert('Winner');\n      let best = bestCount;\n      best.push(count + 1);\n      setBestCount(best);\n      setClickSequence([]);\n      setCount(0);\n      game();\n    } else if (clickSequence.indexOf(divContent) === -1) {\n      let sequence = clickSequence;\n      sequence.push(divContent);\n      setClickSequence(sequence);\n      setCount(count + 1);\n    } else {\n      alert('Game Over');\n      let best = bestCount;\n      best.push(count);\n      setBestCount(best);\n      setClickSequence([]);\n      setCount(0);\n      game();\n    }\n  };\n  function GenerateCards() {\n    let divs = displayedOrders[count].map(element => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"innerCards\",\n        onClick: () => saveNumber(element),\n        children: element\n      }, uniqueId(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: divs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GenerateCards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"current score: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"best score: \", Math.max(...bestCount)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: clickSequence\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Cards, \"EWI9yAELU/ROOY3immJVkvpCHgg=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useEffect","useState","uniqueId","Cards","props","displayedOrders","game","count","setCount","bestCount","setBestCount","clickSequence","setClickSequence","saveNumber","divContent","alert","best","push","indexOf","sequence","GenerateCards","divs","map","element","Math","max"],"sources":["/home/tunahan/Desktop/testFolder/hooks/src/cards.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { uniqueId } from \"lodash\";\nconst Cards = (props) => {\n\n    const displayedOrders = props.displayedOrders\n    const game = props.game\n\n    const [count, setCount] = useState(0)\n    const [bestCount, setBestCount] = useState([0])\n    const [clickSequence, setClickSequence] = useState([])\n\n\n    const saveNumber = (divContent) => {\n        if(count === 11) {\n            alert('Winner')\n            let best = bestCount\n            best.push(count + 1) \n            setBestCount(best)\n            setClickSequence([])\n            setCount(0)\n            game()\n        } else if(clickSequence.indexOf(divContent) === -1) {\n            let sequence = clickSequence\n            sequence.push(divContent)\n            setClickSequence(sequence)\n            setCount(count + 1)\n        } else {\n            alert('Game Over')\n            let best = bestCount\n            best.push(count)\n            setBestCount(best)\n            setClickSequence([])\n            setCount(0)\n            game()\n        }\n\n    }\n\n    function GenerateCards () {\n        \n        let divs = displayedOrders[count].map((element) => {\n            return <div key={uniqueId()} className=\"innerCards\" onClick={() => saveNumber(element)}>{element}</div>\n        })\n        return <div className=\"cards\">{divs}</div>\n    }\n\n\n    return (\n        <div >\n            <GenerateCards/>\n            <div>current score: {count}</div>\n            <div>best score: {Math.max(...bestCount)}</div>\n            <div>{clickSequence}</div>\n        </div>\n    )\n}\n\nexport default Cards;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,QAAQ;AAAC;AAClC,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAA;EAErB,MAAMC,eAAe,GAAGD,KAAK,CAACC,eAAe;EAC7C,MAAMC,IAAI,GAAGF,KAAK,CAACE,IAAI;EAEvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAGtD,MAAMY,UAAU,GAAIC,UAAU,IAAK;IAC/B,IAAGP,KAAK,KAAK,EAAE,EAAE;MACbQ,KAAK,CAAC,QAAQ,CAAC;MACf,IAAIC,IAAI,GAAGP,SAAS;MACpBO,IAAI,CAACC,IAAI,CAACV,KAAK,GAAG,CAAC,CAAC;MACpBG,YAAY,CAACM,IAAI,CAAC;MAClBJ,gBAAgB,CAAC,EAAE,CAAC;MACpBJ,QAAQ,CAAC,CAAC,CAAC;MACXF,IAAI,EAAE;IACV,CAAC,MAAM,IAAGK,aAAa,CAACO,OAAO,CAACJ,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;MAChD,IAAIK,QAAQ,GAAGR,aAAa;MAC5BQ,QAAQ,CAACF,IAAI,CAACH,UAAU,CAAC;MACzBF,gBAAgB,CAACO,QAAQ,CAAC;MAC1BX,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACvB,CAAC,MAAM;MACHQ,KAAK,CAAC,WAAW,CAAC;MAClB,IAAIC,IAAI,GAAGP,SAAS;MACpBO,IAAI,CAACC,IAAI,CAACV,KAAK,CAAC;MAChBG,YAAY,CAACM,IAAI,CAAC;MAClBJ,gBAAgB,CAAC,EAAE,CAAC;MACpBJ,QAAQ,CAAC,CAAC,CAAC;MACXF,IAAI,EAAE;IACV;EAEJ,CAAC;EAED,SAASc,aAAa,GAAI;IAEtB,IAAIC,IAAI,GAAGhB,eAAe,CAACE,KAAK,CAAC,CAACe,GAAG,CAAEC,OAAO,IAAK;MAC/C,oBAAO;QAAsB,SAAS,EAAC,YAAY;QAAC,OAAO,EAAE,MAAMV,UAAU,CAACU,OAAO,CAAE;QAAA,UAAEA;MAAO,GAA/ErB,QAAQ,EAAE;QAAA;QAAA;QAAA;MAAA,QAA4E;IAC3G,CAAC,CAAC;IACF,oBAAO;MAAK,SAAS,EAAC,OAAO;MAAA,UAAEmB;IAAI;MAAA;MAAA;MAAA;IAAA,QAAO;EAC9C;EAGA,oBACI;IAAA,wBACI,QAAC,aAAa;MAAA;MAAA;MAAA;IAAA,QAAE,eAChB;MAAA,WAAK,iBAAe,EAACd,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eACjC;MAAA,WAAK,cAAY,EAACiB,IAAI,CAACC,GAAG,CAAC,GAAGhB,SAAS,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eAC/C;MAAA,UAAME;IAAa;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACxB;AAEd,CAAC;AAAA,GArDKR,KAAK;AAAA,KAALA,KAAK;AAuDX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}